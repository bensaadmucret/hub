# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
parameters:
    # Taille des lots pour l'import CSV
    app.import.batch_size: 100
    
    # Configuration Payload CMS
    payload_api_url: '%env(PAYLOAD_API_URL)%'
    payload_api_key: '%env(PAYLOAD_API_KEY)%'
    
    # Configuration de l'application
    app_name: '%env(APP_NAME)%'
    app_env: '%kernel.environment%'
    app_secret: '%kernel.secret%'
    app_default_from_email: '%env(MAILER_FROM)%'
    app_admin_email: '%env(ADMIN_EMAIL)%'
    
    # Configuration JWT
    jwt_secret_key: '%env(JWT_SECRET_KEY)%'
    jwt_public_key: '%env(JWT_PUBLIC_KEY)%'
    jwt_pass_phrase: '%env(JWT_PASSPHRASE)%'
    jwt_token_ttl: '%env(int:JWT_TOKEN_TTL)%' # 1 hour
    jwt_refresh_token_ttl: '%env(int:JWT_REFRESH_TOKEN_TTL)%' # 30 days

# Configuration par défaut pour tous les services
services:
    _defaults:
        autowire: true      # Injection automatique des dépendances
        autoconfigure: true # Configuration automatique des tags
        public: false

    # Active l'autoconfiguration pour tous les fichiers dans src/
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # Configuration des services personnalisés
    App\Integration\Payload\PayloadClient:
        arguments:
            $baseUrl: '%payload_api_url%'
            $apiKey: '%payload_api_key%'

    # Compat: ancienne implémentation utilisée ailleurs dans le code
    App\Core\Service\PayloadClient:
        arguments:
            $payloadApiUrl: '%payload_api_url%'
            $payloadApiKey: '%payload_api_key%'
            $client: '@http_client'

    # Bind interface to implementation for DI and testing
    App\Integration\Payload\PayloadClientInterface: '@App\Integration\Payload\PayloadClient'

    # Configuration des services d'authentification
    App\Core\Service\EmailVerificationService:
        arguments:
            $defaultFromEmail: '%app_default_from_email%'
    
    App\Core\Service\PasswordResetService:
        arguments:
            $defaultFromEmail: '%app_default_from_email%'
    
    # Configuration pour JWT
    # Alias vers le service du bundle pour l'autowiring correct
    Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface: '@lexik_jwt_authentication.jwt_manager'
    
    # Paramètres JWT (déplacés dans la section parameters)
    
    # Configuration des contrôleurs (doivent être publics)
    App\BFF\Controller\:
        resource: '../src/BFF/Controller/'
        tags: ['controller.service_arguments']
        public: true
        bind:

            $jwtTokenTtl: '%jwt_token_ttl%'
            $jwtRefreshTokenTtl: '%jwt_refresh_token_ttl%'

    App\PortailClient\Controller\:
        resource: '../src/PortailClient/Controller/'
        tags: ['controller.service_arguments']
        public: true

    App\SuperAdmin\Controller\:
        resource: '../src/SuperAdmin/Controller/'
        tags: ['controller.service_arguments']
        public: true

    App\Vitrine\Controller\:
        resource: '../src/Vitrine/Controller/'
        tags: ['controller.service_arguments']
        public: true

    App\Onboarding\Controller\:
        resource: '../src/Onboarding/Controller/'
        tags: ['controller.service_arguments']
        public: true

    # Configuration du workflow d'onboarding
    workflow.onboarding:
        class: Symfony\Component\Workflow\Workflow
        arguments:
            - '@=service("App\\Onboarding\\Workflow\\OnboardingWorkflow").createDefinition()'
            - '@=service("App\\Onboarding\\Workflow\\OnboardingWorkflow").createMarkingStore()'
            - '@event_dispatcher'
            - 'onboarding'
        tags:
            - { name: 'workflow.workflows', type: 'state_machine' }
    
    # Alias pour l'injection du workflow d'onboarding
    Symfony\Component\Workflow\WorkflowInterface $onboardingWorkflow: '@workflow.onboarding'

    # Configuration du gestionnaire d'événements pour le workflow
    App\Onboarding\EventSubscriber\WorkflowSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }

    # Notifications de formulaire de contact
    App\EventSubscriber\ContactNotificationSubscriber:
        arguments:
            $adminEmail: '%app_admin_email%'
            $mailerFrom: '%app_default_from_email%'
        tags:
            - { name: 'kernel.event_subscriber' }
